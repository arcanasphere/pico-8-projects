function init_world ()
 player = {
  x=62,
  y=8,
  sprite=1,
  hitbox_x=0,
  hitbox_y=0,
  hitbox_w=5,
  hitbox_h=5,
  speed=(16/30),
  frame=0,
  petals=0,
 }

 cloud={}
 for i=0,255 do
  cloud[i] = 1
 end
 cloud[1]=0
 cloud[8]=0
 cloud[9]=0
 cloud[10]=0
 cloud[24]=0
 cloud[25]=0
 cloud[26]=0
   
 
 gamestate={
  timeleft=300,
  frame=0,
  petals=0,
 }
 
 viewport = {
  x=32,
  y=0
 }
 
 daffs = {} -- table of daffodils
 daffcount = 0
 
 lilacs = {} -- table of lilacs
 lilaccount = 0

 rosebushes = {}
 rosebushcount = 0
 
 fairycircle = {
   x=72,
   y=6,
   hitbox_x = 0,
   hitbox_y = 0,
   hitbox_w = 16,
   hitbox_h = 16
 }
end

obj = {
 x=62,
 y=8,
 hitbox_x=0,
 hitbox_y=0,
 hitbox_w=8,
 hitbox_h=8,
}

function obj:new(o)
 o = o or {}
 setmetatable(o,self)
 self.__index = self
 return o
end -- end obj:new


function new_daff(x,y,flipme)  
  daffcount += 1
  daffs[daffcount] = obj:new()
  daffs[daffcount].x = x
  daffs[daffcount].y = y
  daffs[daffcount].hitbox_x=0
  daffs[daffcount].hitbox_y=0
  daffs[daffcount].hitbox_w=7
  daffs[daffcount].hitbox_h=16
  if flipme == true then
   daffs[daffcount].flipme=true
   daffs[daffcount].hitbox_x=1
  else
   daffs[daffcount].flipme=false
  end
end

function new_lilac(x,y,flipme)
 lilaccount += 1
 lilacs[lilaccount] = obj:new()
 lilacs[lilaccount].x = x
 lilacs[lilaccount].y = y
 lilacs[lilaccount].hitbox_x=1
 lilacs[lilaccount].hitbox_y=0
 lilacs[lilaccount].hitbox_w=6
 lilacs[lilaccount].hitbox_h=16
 if flipme==true then
  lilacs[lilaccount].flipme=true
 else
  lilacs[lilaccount].flipme=false
 end
end

function new_rosebush(x,y,flipme,petals)
 rosebushcount += 1
 rosebushes[rosebushcount] = obj:new()
 rosebushes[rosebushcount].x = x
 rosebushes[rosebushcount].y = y
 rosebushes[rosebushcount].hitbox_x = 0
 rosebushes[rosebushcount].hitbox_y = 0
 rosebushes[rosebushcount].hitbox_w = 8
 rosebushes[rosebushcount].hitbox_h = 16
 rosebushes[rosebushcount].petals = petals
 if flipme == true then
  rosebushes[rosebushcount].flipme = true
 else
  rosebushes[rosebushcount].flipme = false
 end
end






--collision!!!
--modified from pico fanzine issue 3 page 16
function collide(obj, other)
  if
    other.x+other.hitbox_x+other.hitbox_w > obj.x+obj.hitbox_x and 
    other.y+other.hitbox_y+other.hitbox_h > obj.y+obj.hitbox_y and
    other.x+other.hitbox_x < obj.x+obj.hitbox_x+obj.hitbox_w and
    other.y+other.hitbox_y < obj.y+obj.hitbox_y+obj.hitbox_h 
  then
    return true
  end
end

function check_collision_flowers()
  didcollide = false
  for this_flower in all(daffs) do
    if collide(player, this_flower) == true then didcollide = true end
  end
  for this_flower in all(lilacs) do
    if collide(player,this_flower) == true then didcollide = true end
  end
  for this_bush in all(rosebushes) do
    if collide(player,this_bush) == true then 
      didcollide = true
     if player.petals == 0 and this_bush.petals > 0 then
       player.petals +=1
       this_bush.petals -= 1
     end
    end
  end
  if collide(player,fairycircle) then
    if player.petals > 0 then
      player.petals -= 1
      gamestate.petals += 1
    end
    didcollide = true
  end
 return didcollide
end





--update functions
function update_player ()
  local original_x = player.x
  local original_y = player.y
  if btn(0) then player.x -= player.speed end
  if btn(1) then player.x += player.speed end
  if btn(2) then player.y -= player.speed end
  if btn(3) then player.y += player.speed end
  if player.x < 0 or player.x > 123 then player.x = original_x end
  if player.y < 6 or player.y > 123 then player.y = original_y end
  if check_collision_flowers() == true then
    player.x = original_x
    player.y = original_y
  end
  
  player.frame += 1
  if player.frame >=16 then player.frame = 0 end
  if player.frame > 8 then player.sprite=2 else player.sprite=1 end
end

function update_viewport()
 viewport.x=player.x-29
 viewport.y=player.y-29
 if viewport.x < 0 then viewport.x=0 end
 if viewport.x > 64 then viewport.x=64 end
 if viewport.y < 0 then viewport.y=0 end
 if viewport.y > 64 then viewport.y=64 end
end

function draw_flowers()
  local doflipme = false
  for this_flower in all(daffs) do
    if this_flower.flipme == true then
      spr(222,this_flower.x,this_flower.y+8,1,1,true,false)
      spr(206,this_flower.x,this_flower.y,1,1,true,false)
    else 
      spr(222,this_flower.x,this_flower.y+8)
      spr(206,this_flower.x,this_flower.y)
    end
  end
  for this_flower in all(lilacs) do
    if this_flower.flipme == true then
      spr(223,this_flower.x,this_flower.y+8,1,1,true,false)
      spr(207,this_flower.x,this_flower.y,1,1,true,false)
    else 
      spr(223,this_flower.x,this_flower.y+8)
      spr(207,this_flower.x,this_flower.y)
    end
  end
  for this_bush in all(rosebushes) do
    if this_bush.flipme == true then
      spr(32,this_bush.x,this_bush.y+8,1,1,true,true)
      spr(48,this_bush.x,this_bush.y,1,1,true,true)
    else
      spr(48,this_bush.x,this_bush.y+8)
      spr(32,this_bush.x,this_bush.y)
    end      
  end
  sspr(8,16,16,16,fairycircle.x,fairycircle.y)
end


function update_cloud()
 --get player location
 local cloud_x = flr((player.x+2)/8)
 local cloud_y = flr((player.y+2)/8)
 local cloud_loc = (cloud_y*16) + cloud_x
 cloud[cloud_loc]=0
 if cloud_x -1 >= 0 then cloud[cloud_loc-1] = 0 end
 if cloud_x +1 <= 16 then cloud[cloud_loc+1] = 0 end
 if cloud_y -1 >= 0 then cloud[cloud_loc-16] = 0 end
 if cloud_y +1 <=16 then cloud[cloud_loc+16] = 0 end
end

function draw_cloud()
  local cloud_x = 0
  local cloud_y = 0
  for i=0, 255 do
    if cloud_x >= 16 then
      cloud_x = 0
      cloud_y += 1
    end
    if cloud[i] == 1 then spr(194,cloud_x*8,cloud_y*8) end
    cloud_x += 1
  end
end

function draw_header()
 spr(16,viewport.x,viewport.y+1)
 color(14)
 print(gamestate.petals,viewport.x+5,viewport.y)
 if player.petals >= 1 then spr(16,viewport.x+60,viewport.y+1) end
 local timemsg = gamestate.timeleft
 if gamestate.timeleft < 100 then timemsg = " " .. gamestate.timeleft end
 if gamestate.timeleft < 10 then timemsg = "  " .. gamestate.timeleft end
 print (timemsg,viewport.x+48,viewport.y)
end








-- crucial game functions


function _init()
  cls()
  poke(0x5f2c,3)
  init_world()
  new_daff(40,32,false)
  new_daff(50,32,true)
  new_lilac(60,32,true)
  new_lilac(70,32,false)
  new_rosebush(8,8,false,500)
end

function _update()
  if gamestate.frame >= 30 then
   gamestate.frame = 0
   gamestate.timeleft -= 1
  end
  gamestate.frame += 1
  update_player()
  update_viewport()
  update_cloud()
  camera(viewport.x, viewport.y)
end

function _draw()
 cls()
 clip(0,6,128,122)
 map(0,0,0,0,16,16,0)
 map(16,0,0,0,16,16,1)
 draw_flowers()
 draw_cloud()
 clip()
 draw_header()
 spr(player.sprite,player.x,player.y)
end
